{"version":3,"sources":["components/Messages/DialogItem/DialogItem.module.css","components/Messages/Message/Message.module.css","components/Messages/Messages.module.css","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","hoc/withAuthRedirect.jsx","components/Messages/MessagesContainer.jsx"],"names":["module","exports","DialogItem","name","id","className","style","dialog","to","Message","props","s","message","maxLength","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","Messages","dialogsArray","dialogs","map","dialogName","messagesArray","messages","dialogItems","formData","sendMessage","messageBody","console","log","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagesPage","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,OAAS,0B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,YAAc,8BAA8B,SAAW,6B,8GCW9FC,EARI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC1B,OACE,qBAAKC,UAAWC,IAAMC,OAAtB,SACE,cAAC,IAAD,CAASC,GAAE,oBAAeJ,GAA1B,SAAiCD,O,kBCAxBM,EAJC,SAACC,GACf,OAAO,qBAAKL,UAAWM,IAAEJ,OAAlB,SAA2BG,EAAME,W,oDCIpCC,EAAYC,YAAiB,KAe7BC,EAAmBC,YAAW,CAACC,KAAM,WAAlBD,EAbL,SAACN,GACjB,OACQ,uBAAMQ,SAAUR,EAAMS,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBlB,KAAM,cACzCmB,UAAWC,IAAUC,SAAU,CAACC,IAASZ,OAEpD,8BACI,0DA2BLa,EAnBE,SAAChB,GACd,IAIIiB,EAAejB,EAAMkB,QAAQA,QAAQC,KAAI,SAACC,GAAD,OACzC,cAAC,EAAD,CAAY3B,KAAM2B,EAAW3B,KAAMC,GAAI0B,EAAW1B,IAAS0B,EAAW1B,OAEtE2B,EAAgBrB,EAAMkB,QAAQI,SAASH,KAAI,SAACjB,GAAD,OAAa,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQR,OAE5G,OACI,sBAAKC,UAAWC,IAAMsB,QAAtB,UACI,qBAAKvB,UAAWC,IAAM2B,YAAtB,SAAoCN,IACpC,qBAAKtB,UAAWC,IAAM0B,SAAtB,SAAiCD,IACjC,cAAChB,EAAD,CAAkBG,SAbJ,SAACgB,GACnBxB,EAAMyB,YAAYD,EAASE,aAC3BC,QAAQC,IAAIJ,EAASE,oB,+CCzBzBG,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCeRE,sBACXC,aAfkB,SAACJ,GACnB,MAAO,CACHZ,QAASY,EAAMK,iBAIE,SAACC,GACtB,MAAO,CACHX,YAAa,SAACC,GACVU,EAASC,YAAmBX,UDPR,SAACY,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKxC,MAAM+B,OACT,cAACO,EAAD,eAAeE,KAAKxC,QADI,cAAC,IAAD,CAAUF,GAAG,eAHT,GACX2C,IAAMH,WAOtC,OAAOJ,YAAQL,EAARK,CAAoCK,KCIhCN,CAGbjB","file":"static/js/3.67e02be1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2EdC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Message_dialog__1P_Wv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__1H_De\",\"dialogItems\":\"Messages_dialogItems__18R85\",\"messages\":\"Messages_messages__2j_KC\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './DialogItem.module.css';\n\nconst DialogItem = ({ name, id }) => {\n  return (\n    <div className={style.dialog}>\n      <NavLink to={`/messages/${id}`}>{name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n  return <div className={s.dialog}>{props.message}</div>;\n};\n\nexport default Message;\n","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport style from './Messages.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\n\nconst maxLength = maxLengthCreator(100)\n\nconst MessageForm = (props) => {\n    return (\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field placeholder={\"Enter your message\"} name={\"messageBody\"}\n                           component={TextArea} validate={[required,maxLength]}/>\n                </div>\n                <div>\n                    <button>Send message</button>\n                </div>\n            </form>\n    )\n}\nconst MessageReduxForm = reduxForm ({form: 'message'})(MessageForm)\n\n\nconst Messages = (props) => {\n    const addNewMessage = (formData) => {\n        props.sendMessage(formData.messageBody)\n        console.log(formData.messageBody)\n    }\n    let dialogsArray = props.dialogs.dialogs.map((dialogName) => (\n        <DialogItem name={dialogName.name} id={dialogName.id} key={dialogName.id}/>\n    ));\n    let messagesArray = props.dialogs.messages.map((message) => <Message message={message.message} key={message.id}/>);\n\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogItems}>{dialogsArray}</div>\n            <div className={style.messages}>{messagesArray}</div>\n            <MessageReduxForm onSubmit={addNewMessage} />\n        </div>\n    );\n};\n\nexport default Messages;\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n","import {connect} from 'react-redux';\nimport {sendMessageCreator} from '../../redux/messages-reducer';\nimport Messages from \"./Messages\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.messagesPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (messageBody) => {\n            dispatch(sendMessageCreator(messageBody));\n        },\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Messages)\n"],"sourceRoot":""}